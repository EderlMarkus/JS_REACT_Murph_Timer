{"version":3,"sources":["components/Header.js","components/Timer.js","components/SelectNum.js","components/Countdown.js","components/Play.js","components/selectSplit.js","components/Interface.js","components/Form.js","App.js","serviceWorker.js","index.js"],"names":["Header","react_default","a","createElement","className","style","wrapperStyle","imgstyle","alt","src","Component","background","color","maxHeight","display","position","width","height","textAlign","margin","Timer","wrapperstyle","Math","floor","this","props","seconds","marginRight","fontFamily","padding","SelectNum","createOptions","options","i","_this","reps","handleSelect","e","setState","Value","target","value","listItems","map","option","key","timer","Timer_Timer","name","onChange","sets","CountdownTimer","state","SetPullups","SetPushups","SetSquats","Seconds","RoundsTotal","data","Rounds","Round","restart","exercise","playbeep","countUpSet","checkExercise","countUpRound","checkIfRoundsAreFinished","changeKey","rnd","undefined","SetsPullups","TimePullups","SetsPushups","TimePushups","SetsSquats","TimeSquats","Set","newkey","Audio","play","index_es","onComplete","date","Date","now","spanstyle","PullupsToDoInASet","PushupsToDoInASet","SquatsToDoInASet","fontWeight","fontSize","marginLeft","Play","handleClick","values","Object","includes","Infinity","alert","setspullups","setspushups","setssquats","secondsForPullups","secondsForPushups","secondsForSquats","ShowCountdown","Pullups","Pushups","Squats","console","log","ceil","getSeconds","completed","onClick","btnstyle","Countdown_CountdownTimer","backgroundColor","border","textDecoration","cursor","boxShadow","selectSplit","onchange","selectstyle","Interface","Minutes","SplitPullups","SplitPushups","SplitSquats","calculateTime","secondsToFinish","PullupsUpdate","PushupsUpdate","SquatUpdate","SplitChange","split","parseInt","Fragment","rowstyle","selectSplit_selectSplit","SelectNum_SelectNum","Play_Play","Body","Time","Interface_Interface","appstyle","left","App","Header_Header","Form_Body","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a27657f3.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\nexport default class Header extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"row\" style={wrapperStyle}>\r\n            {/* TODO: Find way to host relative Paths */}\r\n            <img  style={imgstyle} alt=\"murphlogo\" src=\"https://cdn.shopify.com/s/files/1/1805/1385/t/67/assets/logo.png?9100\"></img>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nconst wrapperStyle = {\r\n    background: '#eee',\r\n    color: '#fff',\r\n    maxHeight: \"100px\",\r\n    display: 'inline-block',\r\n    position: 'relative',\r\n    width: \"100%\",\r\n    height: \"40px\",\r\n    textAlign: 'center',\r\n    margin: \"0\"\r\n}\r\n\r\nconst imgstyle = {\r\n    height: \"100%\",\r\n}","import React, { Component } from 'react'\r\n\r\nexport default class Timer extends Component {\r\n  render() {\r\n    return (\r\n        <div className=\"col-sd-12\" style={wrapperstyle}>\r\n        <p>Seconds: {Math.floor(this.props.seconds)}</p>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst wrapperstyle = {\r\n    marginRight: \"5%\",\r\n    background: \"#eee\",\r\n    fontFamily: \"'Khand', sans-serif\",\r\n    color: '#333',\r\n    margin: \"1%\",\r\n    padding: \"1%\"\r\n  }\r\n  ","import React, { Component } from 'react'\r\nimport Timer from './Timer'\r\n\r\nexport default class SelectNum extends Component {\r\n\r\n  \r\n  \r\n\r\n    createOptions = () => {\r\n        let options = []\r\n        \r\n        for (let i = 1; i < this.props.reps + 1; i++){\r\n            options[i] = i; \r\n        }\r\n\r\n        return options;\r\n    }\r\n\r\n    handleSelect = (e) => {\r\n      this.setState({\r\n        Value: e.target.value,\r\n      })\r\n    }\r\n\r\n  \r\n\r\n  render() {\r\n\r\n    let options = this.createOptions();\r\n\r\n    const listItems = options.map(option => <option key={option} value={option}>{option}</option> );\r\n    let timer = \"\";\r\n\r\n    if (this.props.timer === true){\r\n       timer = <Timer name={this.props.name} seconds={this.props.seconds}></Timer>\r\n    }\r\n  \r\n\r\n    return (\r\n      <div className=\"col-sd-4\" style={wrapperstyle}>\r\n        <p>Enter {this.props.name}</p>\r\n        <select onChange = {this.props.handleSelect}  name={this.props.name}>\r\n        {listItems}\r\n        </select>\r\n        <br></br>\r\n        <br></br>\r\n        <p>Sets: {this.props.sets}</p>\r\n        {timer}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst wrapperstyle = {\r\n  marginRight: \"5%\",\r\n  background: \"#eee\",\r\n  fontFamily: \"'Khand', sans-serif\",\r\n  color: '#333',\r\n  margin: \"1%\",\r\n  padding: \"1%\"\r\n}\r\n\r\n","import React, { Component } from 'react'\r\nimport Countdown from 'react-countdown-now';\r\n\r\n\r\nexport default class CountdownTimer extends Component {\r\n\r\n  state = {\r\n    key: 0,\r\n    SetPullups: 0,\r\n    SetPushups: 0,\r\n    SetSquats: 0,\r\n    Seconds: this.props.seconds,\r\n    RoundsTotal: this.props.data.Rounds,\r\n    Round: 1\r\n  }\r\n\r\n  restart = (exercise) => {\r\n    this.playbeep();\r\n    if (this.countUpSet(this.checkExercise()) === \"done\"){\r\n      this.countUpRound();\r\n      if (this.checkIfRoundsAreFinished(this.state.Round)) {\r\n        this.setState({\r\n          Round: 'finished'\r\n        })\r\n        return;\r\n      }\r\n      else {\r\n        this.setState({\r\n          SetPullups: 1,\r\n          SetPushups: 0,\r\n          SetSquats: 0      \r\n        }, () => {\r\n          this.changeKey();\r\n        });\r\n      }\r\n    };\r\n    //this.changeSeconds(exercise);\r\n    this.changeKey();\r\n  }\r\n\r\n  countUpRound = () => {\r\n    const rnd = this.state.Round + 1;\r\n    this.setState({\r\n      Round: rnd\r\n    }\r\n    )\r\n  }\r\n\r\n  checkIfRoundsAreFinished = (Rounds) => {\r\n      if (Rounds === this.state.RoundsTotal){\r\n        return true;\r\n      }\r\n      return false;\r\n  }\r\n\r\n  checkExercise = () => {\r\n    if (this.props.data.SetsPullups == undefined) return;\r\n\r\n    if (this.props.data.SetsPullups > this.state.SetPullups){\r\n      this.setState({\r\n        Seconds: this.props.data.TimePullups\r\n      });\r\n      return \"Pullups\"\r\n    }\r\n    else if (this.props.data.SetsPushups > this.state.SetPushups){\r\n      this.setState({\r\n        Seconds: this.props.data.TimePushups\r\n      })\r\n      return \"Pushups\"\r\n      \r\n    \r\n    }\r\n    else if (this.props.data.SetsSquats > this.state.SetSquats){\r\n      this.setState({\r\n        Seconds: this.props.data.TimeSquats\r\n      })\r\n      return \"Squats\"\r\n      \r\n    }\r\n    \r\n    return \"done\";\r\n  }\r\n\r\n  countUpSet = (exercise) => {\r\n    if (exercise === \"done\") return \"done\";\r\n    if (exercise === \"Pullups\"){\r\n      let Set = this.state.SetPullups + 1;\r\n      this.setState({\r\n        SetPullups: Set\r\n      })\r\n    }\r\n    else if (exercise === \"Pushups\"){\r\n      let Set = this.state.SetPushups + 1;\r\n      this.setState({\r\n        SetPushups: Set\r\n      })\r\n    }\r\n    else if (exercise === \"Squats\"){\r\n      let Set = this.state.SetSquats + 1;\r\n      this.setState({\r\n        SetSquats: Set\r\n      })\r\n    }\r\n    return;\r\n    \r\n  }\r\n\r\n  changeKey = () => {\r\n      const newkey = this.state.key + 1;\r\n      this.setState({\r\n        key: newkey\r\n      })\r\n    }\r\n\r\n    playbeep = () => {\r\n      const  audio = new Audio('https://www.soundjay.com/button/beep-02.wav');\r\n      audio.play();\r\n\r\n    }\r\n  \r\n  render() {    \r\n    return (  \r\n        <div className=\"col-xl-12\" style={wrapperstyle} >\r\n           <Countdown key={this.state.key} onComplete = {this.restart} date={Date.now() + (this.state.Seconds) * 1000}></Countdown>\r\n          <br></br>\r\n          <span style={spanstyle}> Set Pullup: {this.state.SetPullups} of {this.props.data.SetsPullups} // Reps: {this.props.data.PullupsToDoInASet}</span>\r\n          <br></br>\r\n          <span style={spanstyle}> Set Pushups: {this.state.SetPushups}  of {this.props.data.SetsPushups} // Reps: {this.props.data.PushupsToDoInASet}</span>\r\n          <br></br>\r\n          <span style={spanstyle}> Set Squats: {this.state.SetSquats}  of {this.props.data.SetsSquats} // Reps: {this.props.data.SquatsToDoInASet}</span>\r\n          <br></br>\r\n          <span>Round: {this.state.Round} of {this.state.RoundsTotal}</span>\r\n         </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst wrapperstyle = {\r\n    marginRight: \"5%\",\r\n    background: \"#eee\",\r\n    fontFamily: \"'Khand', sans-serif\",\r\n    color: '#333',\r\n    margin: \"1%\",\r\n    padding: \"1%\",\r\n    fontWeight: \"bold\",\r\n    fontSize: \"2rem\"\r\n\r\n  }\r\n\r\n  const spanstyle = {\r\n    marginLeft: \"5%\",\r\n    fontWeight: \"normal\",\r\n    fontSize: \"1.5rem\"\r\n  }\r\n  ","import React, { Component } from 'react'\r\nimport CountdownTimer from './Countdown';\r\n\r\nexport default class Play extends Component {\r\n    state = {\r\n    }\r\n\r\n\r\n    handleClick = () => {\r\n      const values = Object.values(this.props.data);\r\n      \r\n      if (values.includes(Infinity) || values.includes(0)){\r\n        alert(\"Fill out all Fields!\")\r\n      }\r\n      else{\r\n          this.setState({\r\n          SetsPullups: this.props.data.setspullups,\r\n          SetsPushups: this.props.data.setspushups,\r\n          SetsSquats: this.props.data.setssquats,\r\n          TimePullups: this.props.data.secondsForPullups,\r\n          TimePushups: this.props.data.secondsForPushups,\r\n          TimeSquats: this.props.data.secondsForSquats,\r\n          Rounds: this.props.data.Rounds,\r\n          ShowCountdown: true,\r\n          PullupsToDoInASet: this.props.data.Pullups,\r\n          PushupsToDoInASet: this.props.data.Pushups,\r\n          SquatsToDoInASet: this.props.data.Squats,\r\n\r\n          }, () => {\r\n            console.log(Math.ceil(this.state.Rounds));\r\n        });\r\n      }\r\n    }\r\n\r\n    getSeconds = (Seconds) => {\r\n      return (Date.now() + Math.floor(Seconds) * 1000)\r\n\r\n    }\r\n\r\n    completed = () => {\r\n      console.log(\"completed!\");\r\n      \r\n    \r\n    }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"col-xl-12\" style={wrapperstyle}>\r\n        <button onClick={this.handleClick} style={btnstyle}>Play</button>\r\n        <br></br>\r\n        <div className=\"col-xl-12\" style={wrapperstyle} >\r\n        {this.state.ShowCountdown ? <CountdownTimer data={this.state} seconds={5}/> : null}\r\n         </div>        \r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst btnstyle = {\r\n    margin: \"1%\",\r\n    backgroundColor: \"rgb(238, 238, 238)\",\r\n    border: \"none\",\r\n    color: \"rgb(51, 51, 51)\",\r\n    padding: \"15px 32px\",\r\n    textAlign: \"center\",\r\n    textDecoration: \"none\",\r\n    display: \"inline-block\",\r\n    fontSize: \"16px\",\r\n    cursor: \"pointer\",\r\n    fontFamily: \"Khand, sans-serif\",\r\n    boxShadow: \"rgba(0, 0, 0, 0.6) 0px 5px 15px\"\r\n\r\n      \r\n}\r\n\r\n\r\n\r\n\r\n  const wrapperstyle = {\r\n    marginRight: \"5%\",\r\n    fontFamily: \"'Khand', sans-serif\",\r\n    color: '#333',\r\n    margin: \"0%\",\r\n    padding: \"0%\"\r\n  }\r\n  \r\n  \r\n","import React, { Component } from 'react'\r\n\r\nexport default class selectSplit extends Component {\r\n  render() {\r\n    return (\r\n         <select onChange={this.props.onchange} name=\"Split\" style={selectstyle}>\r\n            <option value=\"5/10/15\">5/10/15</option>\r\n            <option value=\"10/20/30\">10/20/30</option>\r\n            <option value=\"20/40/60\">20/40/60</option>\r\n            <option value=\"50/100/150\">50/100/150</option>\r\n            <option value=\"100/200/300\">100/200/300</option>\r\n            <option value=\"50/100/150\">50/100/150 (Training)</option>\r\n\r\n        </select>\r\n    )\r\n  }\r\n}\r\n\r\nconst selectstyle = {\r\n  margin: \"1%\"\r\n}\r\n","import React, { Component } from 'react'\r\nimport SelectNum from './SelectNum'\r\nimport Play from './Play'\r\nimport SelectSplit from './selectSplit'\r\n\r\nexport default class Interface extends Component {\r\n\r\n  state = {\r\n    Minutes: 0,\r\n    Pullups: 0,\r\n    Pushups: 0,\r\n    Squats: 0,\r\n    secondsForPullups: 0,\r\n    secondsForPushups: 0,\r\n    secondsForSquats: 0,\r\n    setspullups: 0,\r\n    setspushups: 0,\r\n    setssquats: 0,\r\n    SplitPullups: 0,\r\n    SplitPushups: 0,\r\n    SplitSquats: 0,\r\n  }\r\n\r\n    createOptions = () => {\r\n        let options = []\r\n        \r\n        for (let i = 1; i < this.props.reps + 1; i++){\r\n            options[i] = i; \r\n        }\r\n\r\n        return options;\r\n    }\r\n\r\n    calculateTime = (data) => {\r\n        let secondsToFinish = data.Minutes * 60\r\n\r\n        this.setState({\r\n            secondsForPullups: (secondsToFinish / 3) / (100/data.Pullups),\r\n            secondsForPushups: (secondsToFinish / 3) / (200/data.Pushups),\r\n            secondsForSquats: (secondsToFinish / 3) / (300/data.Squats),\r\n        })\r\n        \r\n    }\r\n\r\n    handleSelect = (e) => {\r\n      this.setState({\r\n        Minutes: e.target.value,\r\n      }, () => {\r\n        this.calculateTime(this.state);\r\n      })\r\n    }\r\n\r\n    PullupsUpdate = (e) => {\r\n        this.setState({\r\n            Pullups: e.target.value,\r\n            setspullups: Math.ceil(this.state.SplitPullups / e.target.value)\r\n        }, () => {\r\n            this.calculateTime(this.state);\r\n          })\r\n    }\r\n\r\n    PushupsUpdate = (e) => {\r\n        this.setState({\r\n            Pushups: e.target.value,\r\n            setspushups: Math.ceil(this.state.SplitPushups / e.target.value)\r\n        }, () => {\r\n            this.calculateTime(this.state);\r\n          })\r\n    }\r\n\r\n    SquatUpdate = (e) => {\r\n        this.setState({\r\n            Squats: e.target.value,\r\n            setssquats: Math.ceil(this.state.SplitSquats / e.target.value)\r\n\r\n        }, () => {\r\n            this.calculateTime(this.state);\r\n          })\r\n    }\r\n\r\n    SplitChange = (e) => {\r\n          const split = e.target.value.split(\"/\");\r\n          this.setState({\r\n            SplitPullups: parseInt(split[0]),\r\n            SplitPushups: parseInt(split[1]),\r\n            SplitSquats: parseInt(split[2]),\r\n            setspullups: Math.ceil(parseInt(split[0]) / this.state.Pullups),\r\n            setspushups: Math.ceil(parseInt(split[1]) / this.state.Pushups),\r\n            setssquats: Math.ceil(parseInt(split[2]) / this.state.Squats),\r\n            Rounds: 100 / parseInt(split[0])\r\n\r\n          }, () => {\r\n            this.calculateTime(this.state);\r\n          })\r\n    }\r\n\r\n  \r\n\r\n\r\n  render() {\r\n\r\n    let options = this.createOptions();\r\n\r\n    const listItems = options.map(option => <option key={option} value={option}>{option}</option> );\r\n \r\n\r\n    return (\r\n        <React.Fragment>\r\n        <div className = \"row\" style={rowstyle}>\r\n            <div className=\"col-xl-6\" style={wrapperstyle}>\r\n            <p>Enter {this.props.name}</p>\r\n            <select onChange = {this.handleSelect}  name={this.props.name}>\r\n            {listItems}\r\n            </select>\r\n            </div>\r\n        <br></br>\r\n        <div className=\"col-xl-6\" style={wrapperstyle}>\r\n        <p>Enter Split:</p>\r\n        <SelectSplit onchange={this.SplitChange}></SelectSplit>\r\n        </div>\r\n        </div>\r\n        <br></br>\r\n        <div className = \"row col-centered\" style={rowstyle}>\r\n          <SelectNum sets={this.state.setspullups}  name=\"Pullups\" seconds = {this.state.secondsForPullups} handleSelect = {this.PullupsUpdate} timer = {true} reps = {this.state.SplitPullups}></SelectNum>\r\n          <SelectNum sets={this.state.setspushups}  name=\"Push-Ups\" seconds = {this.state.secondsForPushups} handleSelect = {this.PushupsUpdate} timer = {true} reps = {this.state.SplitPushups} ></SelectNum>\r\n          <SelectNum sets={this.state.setssquats}  name=\"Squats\" seconds = {this.state.secondsForSquats} handleSelect = {this.SquatUpdate} timer = {true} reps = {this.state.SplitSquats} ></SelectNum>\r\n        </div>\r\n        <br></br>\r\n        <div className =\"row\" style={rowstyle}>\r\n            <Play data = {this.state} ></Play>\r\n        </div>\r\n        <br></br>\r\n        </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nconst wrapperstyle = {\r\n    marginRight: \"5%\",\r\n    background: \"#eee\",\r\n    fontFamily: \"'Khand', sans-serif\",\r\n    color: '#333',\r\n    margin: \"1%\",\r\n    padding: \"1%\",\r\n    fontWeight: \"bold\"\r\n}\r\n  \r\n\r\nconst rowstyle = {\r\n    margin: \"0 10px\"\r\n  }\r\n  \r\n","import React, { Component } from 'react';\r\nimport Interface from './Interface'\r\n\r\nexport default class Body extends Component {\r\n\r\n  state = {\r\n    Time: ''\r\n  }\r\n\r\n\r\n  render() {\r\n   \r\n    return (\r\n      <React.Fragment>\r\n          <br></br>\r\n          <Interface name=\"Minutes to Finish\" reps={60}></Interface>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\n\r\n\r\n","import React from 'react';\nimport Header from './components/Header'\nimport Body from './components/Form'\nimport './App.css'\n\nfunction App() {\n  return (\n    <div className=\"App\" style={appstyle}>\n     <Header></Header>\n     <Body></Body>\n    </div>\n  );\n}\n\nconst appstyle = {\n  position: 'absolute',\n  height: \"100%\",\n  width: \"100%\",\n  left: \"0\"\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}